<?php

namespace Five\CuisinesVerdunBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends AbstractRepository
{
    public function fetchMessageData( ) {
        $connection = $this->getEntityManager()->getConnection();

        // get branch IDs
        $branches = array();
        $q = "SELECT b.id from cv_branch b WHERE b.enabled = 1 ORDER BY b.id ASC";
        $statement = $connection->prepare($q);
        $statement->execute();
        $result    = $statement->fetchAll();
        foreach ($result as $branch) {
            array_push($branches, $branch['id']);
        }

        $rv = array();
        // 0: total
        $rv[0] = array();
        foreach ($branches as $branch) {
            $q = "SELECT count(b.email) as cnt FROM cv_user b WHERE b.branch = $branch GROUP BY round(UNIX_TIMESTAMP(b.created_at) / 300), b.email";

            $statement = $connection->prepare( $q );
            $statement->execute();
            $result    = $statement->fetchAll();
            $rv[0][$branch] = 0;

            if( $result != false )
            {
                if( isset( $result[ 0 ] ) )
                {
                    foreach ($result as $row)
                    {
                        $rv[0][$branch] = $rv[0][$branch] + 1;
                    }
                }
            }

        }
        // 1: this year
        $rv[1] = array();
        foreach ($branches as $branch) {
            $q = "SELECT count(b.email) as cnt FROM cv_user b WHERE b.branch = $branch AND b.created_at <= '".date("Y")."-12-31 23:59:59' AND b.created_at >= '".date("Y")."-01-01 00:00:00' GROUP BY round(UNIX_TIMESTAMP(b.created_at) / 300), b.email";
            $statement = $connection->prepare( $q );
            $statement->execute();
            $result    = $statement->fetchAll();
            $rv[1][$branch] = 0;

            if( $result != false )
            {
                if( isset( $result[ 0 ] ) )
                {
                    foreach ($result as $row)
                    {
                        $rv[1][$branch] = $rv[1][$branch] + 1;
                    }
                }
            }
        }
        // 2: this month
        $rv[2] = array();
        foreach ($branches as $branch) {
            $q = "SELECT count(b.email) as cnt FROM cv_user b  WHERE b.branch = $branch AND b.created_at < '".date('Y-m', strtotime('+1 month'))."-01 00:00:00' AND b.created_at >= '".date("Y-m")."-01 00:00:00' GROUP BY round(UNIX_TIMESTAMP(b.created_at) / 300), b.email";
            $statement = $connection->prepare( $q );
            $statement->execute();
            $result    = $statement->fetchAll();
            $rv[2][$branch] = 0;

            if( $result != false )
            {
                if( isset( $result[ 0 ] ) )
                {
                    foreach ($result as $row)
                    {
                        $rv[2][$branch] = $rv[2][$branch] + 1;
                    }
                }
            }
        }
        // 3: this week
        $rv[3] = array();
        foreach ($branches as $branch) {
            $q = "SELECT count(b.email) as cnt FROM cv_user b  WHERE b.branch = $branch AND b.created_at >='".date('Y-m-d', strtotime('last sunday', strtotime('tomorrow')))." 00:00:00' GROUP BY round(UNIX_TIMESTAMP(b.created_at) / 300), b.email";
            $statement = $connection->prepare( $q );
            $statement->execute();
            $result    = $statement->fetchAll();
            $rv[3][$branch] = 0;

            if( $result != false )
            {
                if( isset( $result[ 0 ] ) )
                {
                    foreach ($result as $row)
                    {
                        $rv[3][$branch] = $rv[3][$branch] + 1;
                    }
                }
            }
        }
        return $rv;
    }

/*        $sql = "SELECT
        I.* FROM cv_gallery__category as C
        LEFT JOIN cv_gallery__realisation as IC ON IC.gallery_category_id = C.ID AND $contextSql AND $catsSql
        LEFT JOIN cv_gallery__image as I ON IC.gallery_image_id = I.id
        WHERE I.id is not null
        GROUP BY I.id
        ORDER BY IC.position DESC";

        $em         = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare( $sql );

        $statement->execute();
        $result = $statement->fetchAll();
        if ($result === false) return -1;

        return $result;   */

}
