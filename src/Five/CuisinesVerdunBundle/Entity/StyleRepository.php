<?php

namespace Five\CuisinesVerdunBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Five\CuisinesVerdunBundle\Entity\Style;

/**
 * StyleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StyleRepository extends EntityRepository
{

    public function add( $fr, $en, $type, $frDesc, $enDesc ) {
        $style = new Style();
        $style->setFr($fr);
        $style->setEn($en);
        $style->setType($type);
        $style->setFrDescription($frDesc);
        $style->setEnDescription($enDesc);
        $em = $this->getEntityManager();

        $em->persist($style);
        $em->flush();
        return $style->getId();
    }

    public function delete( $id ) {
        $style = $this->findById($id);
        if ($style) {
            $style = $style[0];
            $em = $this->getEntityManager();
            $em->remove($style);
            $em->flush();
         }
    }

    public function edit( $id, $fr, $en ) {
        $style = $this->findById($id);
        if ($style) {
            $style = $style[0];
            $style->setFrDescription($fr);
            $style->setEnDescription($en);
            $em = $this->getEntityManager();
            $em->persist($style);
            $em->flush();
         }
    }

    public function getList($type) {
        $q = "SELECT b FROM FiveCuisinesVerdunBundle:Style b WHERE b.type = '$type'";
        return $this->getEntityManager()->createQuery($q)->getResult();
    }

    public function getImages($room = "") {
        $rv = array();
        $q = "SELECT b.id FROM FiveCuisinesVerdunBundle:Style b";
        if ($room != "") $q .= " WHERE b.type = '$room' ";
        $styles = $this->getEntityManager()->createQuery($q)->getResult();
        foreach ($styles as $style) {
            $tmp = array();
            $q = "SELECT b FROM FiveCuisinesVerdunBundle:Image b WHERE b.type = 'style' and b.category = ".$style['id']." ORDER BY b.sortOrder";
            $results = $this->getEntityManager()->createQuery($q)->getResult();
            foreach ($results as $result) {
                array_push($tmp, array("id" => $result->getId(), "url" => $result->getUrl(), "type" => $result->getType(), "category" => $result->getCategory(), "fr" => $result->getFr(), "en" => $result->getEn(), "sortOrder" => $result->getSortOrder()));
            }
            if (sizeof($tmp) > 0) $rv[$style['id']] = $tmp;
        }
        return $rv;
    }

}
