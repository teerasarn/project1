<?php

namespace Five\CuisinesVerdunBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * BranchRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BranchRepository extends EntityRepository
{
    public function fetchBranches($language) {
        if ($language == "en") { $language = "_en"; }
        else { $language = ""; }
        $q = "SELECT b.id,b.name,b.street".$language.",b.city".$language.",b.postalCode,b.phone,b.fax,b.hours".$language.",b.division,b.lat,b.lng,b.contactEmail FROM FiveCuisinesVerdunBundle:Branch b ORDER BY b.id";
        $r = $this->getEntityManager()->createQuery($q)->getResult();
        if ($language == "_en") {
            foreach ($r as $branch) {
                $branch["hours"] = $branch["hours_en"];
                $branch["city"] = $branch["city_en"];
                $branch["street"] = $branch["street_en"];
                $s[] = $branch;
            }
            $r = $s;
        }
        return $r;
    }
    public function findBranch($pc_indicator) {
        $em = $this->getEntityManager();
        $connection = $em->getConnection();
        $statement = $connection->prepare("SELECT branch FROM cv_pc WHERE pc = :pc");
        $statement->bindValue('pc', $pc_indicator);
        $statement->execute();
        $result = $statement->fetch();
        if ($result === false) return -1;
        return implode($result);
    }
    public function getContactEmail($branch) {
        if ($branch == -1) { return "info@pfverdun.com"; }
        $q = "SELECT b.contactEmail FROM FiveCuisinesVerdunBundle:Branch b WHERE b.id=".$branch;
        $r = $this->getEntityManager()->createQuery($q)->getResult();
        if ($r[0]["contactEmail"] === null) return "info@pfverdun.com";
        return $r[0]["contactEmail"];
    }
    public function getBranchName($branch) {
        if ($branch == -1) { return "inconnu"; }
        $q = "SELECT b.name FROM FiveCuisinesVerdunBundle:Branch b WHERE b.id=".$branch;
        $r = $this->getEntityManager()->createQuery($q)->getResult();
        if ($r[0]["name"] === null) return "inconnu";
        return $r[0]["name"];
    }
}
