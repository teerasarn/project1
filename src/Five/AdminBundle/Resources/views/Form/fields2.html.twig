{# FORM RENDERING FOR BOOTSTRAP 3 AND ANGULAR INTEGRATION #}

{% extends 'form_div_layout.html.twig' %}

{% block form_row %}
{#                 {% for key,val in form.vars.block_prefixes %}
                {{ key }} -> {{ val }}<br/>
                {% endfor %} #}
    {% set formName = _self.getTopFormName(form) %}
    {% set modelName = form.vars.full_name | replace({'[' : '.', ']' : ''}) %}
    {% set formModelName = formName ~ "['" ~ form.vars.full_name ~ "']" %}
    {% set ngClass = "ng-class=\"{ 'has-error': " ~ formModelName ~ ".$invalid && !" ~ formModelName ~ ".$pristine }\"" %}

    {# possible form types are 'basic', 'horizontal' and 'inline' #}
    {# other types are not implemented yet #}
    {% set formType = 'basic' %}


    {% if "checkbox" in form.vars.block_prefixes or "radio" in form.vars.block_prefixes or
        ("choice" in form.vars.block_prefixes and "expanded" in form.vars and form.vars.expanded == true)
    %}
        {# {% set attr = attr | merge({ 'ng-model': modelName }) %} #}
    {% else %}
        {% set classNames = 'form-control' %}
        {% set class = 'class' in attr | keys ? attr.class ~ ' ' ~ classNames : classNames %}
        {% set attr = attr | merge({ 'class': class }) %}
    {% endif %}


    {% if "checkbox" in form.vars.block_prefixes or "radio" in form.vars.block_prefixes %}

        <div class="checkbox">
            <label>
                {{ form_widget(form, { 'attr': attr }) }}
                {{ form.vars.label | default(form.vars.name | humanize) }}
            </label>
        </div>

    {% elseif "choice" in form.vars.block_prefixes %}

        <div class="form-group" {# {{ ngClass | raw }} #}>
            {{ form_label(form, null) }}

            {% if "expanded" in form.vars and form.vars.expanded == true %}
                {% for index, choice in form %}
                    {% if index ~'' != 'placeholder' %}
                        <div class="radio">
                            <label>
                                {{ form_widget(choice, { 'attr': attr }) }}
                                {{ choice.vars.label }}
                            </label>
                        </div>
                    {% endif %}
                {% endfor %}
            {% else %}
                {{ form_widget(form, { 'attr': attr }) }}
                {# <span class="help-block" ng-show="{{ formModelName }}.$error.invalid">Please choose a valid option</span> #}
            {% endif %}
        </div>

    {% else %}

        <div class="form-group"{#  {{ ngClass | raw }} #}>
            {{ form_label(form, null) }}
            {{ form_widget(form, { 'attr': attr }) }}
            {# <span class="help-block" ng-show="{{ formModelName }}.$error.invalid">Please choose a valid option</span> #}
        </div>

    {% endif %}
{% endblock form_row %}


{% block hidden_row %}

    {% if form.vars.name == '_token' %}
        {% set modelName = _self.getTopFormName(form) ~'._token' %}
        {% set attr = attr | merge({ 'ng-model': modelName, 'ng-init': modelName ~' = "' ~ form.vars.data ~ '"' }) %}
    {% else %}
        {% set modelName = form.vars.full_name | replace({'[' : '.', ']' : ''}) %}
        {% set attr = attr | merge({ 'ng-model': modelName }) %}
    {% endif %}


    {{ form_widget(form, { 'attr': attr }) }}
{% endblock hidden_row %}



{% macro getTopFormName(form) %}{% spaceless %}

    {% if not form.parent is null %}
        {{ _self.getTopFormName(form.parent) }}
    {% elseif 'attr' in form.vars | keys and 'name' in form.vars.attr | keys %}
        {{ form.vars.attr.name }}
    {% else %}
        {{ form.vars.name }}
    {% endif %}

{% endspaceless %}{% endmacro %}