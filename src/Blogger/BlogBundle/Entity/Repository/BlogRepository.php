<?php

namespace Blogger\BlogBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\QueryBuilder;

/**
 * BlogRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BlogRepository extends EntityRepository
{
	
	//protected $entityClass = 'BloggerBlogBundle:Blog';		
	
    public function getLatestBlogs($limit = null , $first_result = null ,  $blog_tag = "" )
    {
        $qb = $this->createQueryBuilder('b')
                   ->select('b')
                   ->addOrderBy('b.created', 'DESC');
        
        if ( $blog_tag != "" )
        {
            $qb->where("b.tags like :tags ")
               ->setParameters( array( 'tags' =>  '%"'.$blog_tag.'"%' ) );
            
        }
                   
        if (false === is_null($limit))
            $qb->setFirstResult($first_result);

        if (false === is_null($limit))
            $qb->setMaxResults($limit);


        return $qb->getQuery()
                  ->getResult();
    }	


    public function getMonthlyBlogCount($limit = null)
    {

        $qb = $this->createQueryBuilder('b')
                   ->select('count(b)')
                   ->where(' SUBSTRING(b.created,6,2) = SUBSTRING(CURRENT_DATE(),6,2) and  SUBSTRING(b.created,1,4) = SUBSTRING(CURRENT_DATE(),1,4)  ')
                   ->addOrderBy('b.created', 'DESC');

        return $qb->getQuery()->getSingleScalarResult();

    }	
    
    public function getBlogCount($blog_tag = "")
    {

        $qb = $this->createQueryBuilder('b')
                   ->select('count(b)');
        
        if ( $blog_tag != "" )
        {
            $qb->where("b.tags like :tags ")
               ->setParameters( array( 'tags' =>  '%"'.$blog_tag.'"%' ) );
            
        }
        
        return $qb->getQuery()->getSingleScalarResult();

    }	
    
    public function findByPermalink($permalink , $_locale)
    {

        $qb = $this->createQueryBuilder("b")
                   ->select("b")
                   ->where("b.perma_link_".$_locale." = :permalink ")

                   ->setParameters( array( 'permalink' =>  $permalink ) )
                   ;
        //== still posible to have more than 2 ***** important ****** ===============
        $result = $qb->getQuery()->getResult();
        
        if( count($result) == 1 )
        {
            return $result[0];
        }
        else 
        {
            return null;
        }
        /*
        try{
            return $qb->getQuery()->getSingleResult();
        }
        catch (NoResultException $e)
        {
            return null;
        }
        
         */
    }	
    
    public function countByPermalink($permalink, $_locale , $id )
    {

        $qb = $this->createQueryBuilder("b")
                   ->select("count(b)")
                   ->where("b.perma_link_".$_locale." LIKE :permalink ")
                   ->andwhere("b.id <> :id ")
                   ->setParameters( array( 'permalink' =>  $permalink."%" , 'id' => $id  ) )
                   ;
        //echo $qb->getQuery()->getSQL();
        //echo "<br />". $permalink;
        //exit();
        //== still posible to have more than 2 ===============
        return $qb->getQuery()->getSingleScalarResult();

    }	   
    
    public function addLikeCount($id)
    {
                
    }
	
}
